services:
  backend:
    build:
      context: .
      dockerfile: ./docker/cms/Dockerfile
    ports:
      - "3000:3000"
    # for production
    # env_file:
    #  - .env
    environment:
      - HOST=db
      - PORT=5432
      - USER_NAME=postgres
      - DB_NAME=cms
      - PASSWORD=postgres
      - SECRET=secret
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      db:
        condition: service_healthy

      elasticsearch:
        condition: service_healthy

  db:
    image: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./docker/db/seed/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_DB=cms
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 4s
      timeout: 2s
      retries: 5

  elasticsearch:
    image: elastic/elasticsearch:7.17.24
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200 >/dev/null || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 120
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

volumes:
  db-data: